name: Instance Management CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-22.04 # Keeping it locked in to 22.04, avoiding any update issues when happens on GitHub's side.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check Terraform Formatting
        run: terraform fmt -recursive -check || true # Ignore errors on tfvars
        working-directory: ${{ github.workspace }}/terraform-scripts

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ github.workspace }}/terraform-scripts

      - name: Set GitHub Authentication Token
        run: echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Google authentication flow needs to run before running terraform-apply
      - name: Run Google Cloud Authentication
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh workflow run ci-google-auth.yml 

      - name: Auto apply variables
        run: terraform apply -auto-approve -var-file=terraform.auto.tfvars
        working-directory: ${{ github.workspace }}/terraform-scripts

      - name: Validate Terraform
        run: terraform validate
        working-directory: ${{ github.workspace }}/terraform-scripts

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/terraform-scripts

      - name: Run ShellCheck
        run: |
          sudo apt-get install -y shellcheck
          shellcheck infra/*.sh scripts/*.sh

      - name: Run health check script
        run: ./scripts/health-check.sh

      - name: Install Pre-Dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Install Main Dependencies (Only If Missing)
        run: |
          while IFS= read -r package || [[ -n "" ]]; do
            # Ignore comments and empty lines in requirements.txt
            [[ "" =~ ^#.*$ || -z "" ]] && continue
            # Extract the actual package name (handle version constraints like "numpy==1.21.0")
            pkg_name=
            # Check if package is installed
            python -c "import " 2>/dev/null || pip install ""
          done < requirements.txt

      - name: Install Google Cloud CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli
          gcloud --version

      - name: Install tflint and shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y tflint shellcheck

      - name: Run Ruff Linter
        run: python -m ruff check . # Runs ruff on all Python files.

      - name: Auto-Fix Formatting with Black (if running manually)
        if: github.event_name == 'pull_request'
        run: black . # Auto-formats code (this won't block CI)

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Auto-update pre-commit hooks
        run: pre-commit autoupdate

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run Tests
        run: pytest tests/ || true # Allows test failures but pipeline continues
